@model ProductDetailsViewModel
@{
	ViewData["Title"] = "Detail";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
	<div class="col-sm-3">
		<partial name="_SidebarPartial" />
	</div>
	<div class="col-sm-9 padding-right">
		<div class="product-details">
			<!--product-details-->
			<div class="col-sm-5">
				<div class="view-product">
					<div class="img-magnifier-containerd">
						<img id="productImage" src="~/img/@Model.ProductDetails.Img" alt="@Model.ProductDetails.Name"  />
					</div>
				</div>
				<div id="similar-product" class="carousel slide" data-ride="carousel">

					<!-- Wrapper for slides -->
					<div class="carousel-inner">
						<div class="item">
							<a href=""><img src="images/product-details/similar1.jpg" alt=""></a>
							<a href=""><img src="images/product-details/similar2.jpg" alt=""></a>
							<a href=""><img src="images/product-details/similar3.jpg" alt=""></a>
						</div>
					</div>

					<!-- Controls -->
					<a class="left item-control" href="#similar-product" data-slide="prev">
						<i class="fa fa-angle-left"></i>
					</a>
					<a class="right item-control" href="#similar-product" data-slide="next">
						<i class="fa fa-angle-right"></i>
					</a>
				</div>
			</div>
			<div class="col-sm-7">
				<div class="product-information">
					<!--/product-information-->
					<h2>@Model.ProductDetails.Name</h2>
					<span>
						<span>@Model.ProductDetails.Price.ToString("#,##0 VNĐ")</span>
						<label>Số lượng:</label>
						<input type="text" value="3" />
						@if (@Model.ProductDetails.Quantity > 0)
						{
							<button type="button" class="btn btn-fefault cart">
								<i class="fa fa-shopping-cart"></i>
								Thêm giỏ hàng
							</button>
						}
						else
						{
							<button type="button" class="btn btn-fefault ">
								<i class="fa fa-shopping-cart"></i>
								Hết hàng
							</button>
						}
					</span>
					<p><b>Tình trạng:</b>@Model.ProductDetails.Sold</p>
					<p><b>Trạng thái:</b>New</p>
					<p><b>Thương hiệu:</b> @Model.ProductDetails.Category.Name</p>
					<p><b>Danh mục:</b> @Model.ProductDetails.Brand.Name</p>
					<a href=""><img src="images/product-details/share.png" class="share img-responsive" alt="" /></a>
				</div><!--/product-information-->
			</div>
		</div><!--/product-details-->

		<div class="category-tab shop-details-tab">
			<!--category-tab-->
			<div class="col-sm-12">
				<ul class="nav nav-tabs">
					<li class="active"><a href="#details" data-toggle="tab">Chi tiết</a></li>
					<li><a href="#companyprofile" data-toggle="tab">Thông tin</a></li>
					<li><a href="#tag" data-toggle="tab">Thẻ</a></li>
					<li><a href="#reviews" data-toggle="tab">Đánh giá (5)</a></li>
				</ul>
			</div>
			<div class="tab-content">
				<div class="tab-pane fade active in" id="details">

					@if (Model.ProductDetails != null && !string.IsNullOrEmpty(Model.ProductDetails.Description))
					{
						@Html.Raw(Model.ProductDetails.Description)
					}
					else
					{
						<p>Không có mô tả cho sản phẩm này.</p>
					}	
				</div>
				<div class="tab-pane" id="companyprofile">
					@Html.Raw(Model.ProductDetails.Infomation)
				</div>
				<div class="tab-pane" id="tag">
					
				</div>
				<div class="tab-pane " id="reviews">
					<div class="col-sm-12">
						<ul>
							<li><a href=""><i class="fa fa-user"></i>VN</a></li>
							<li><a href=""><i class="fa fa-clock-o"></i>12:41 PM</a></li>
							<li><a href=""><i class="fa fa-calendar-o"></i>04/2025</a></li>
						</ul>
						<p><b>Hãy viết đánh giá</b></p>					
						<form autocomplete="off" asp-action="CommentProduct" asp-controller="Product" method="POST">
							<span>
								<input asp-for="@Model.ProductDetails.Id" name="ProductId" type="hidden" />
								<input type="hidden" name="Star" id="Star" value="0" />
								<input asp-for="@Model.Name"  type="text" placeholder="Tên của bạn" />
								<span asp-validation-for="@Model.Name" class="text-danger"></span>
								<input asp-for="@Model.Email" name="Email" type="email" placeholder="Email" />
								<span asp-validation-for="@Model.Email" class="text-danger"></span>
							</span>
							<textarea asp-for="@Model.Comment"></textarea>
							<span asp-validation-for="@Model.Comment" class="text-danger"></span>

							<b>Rating: </b> <img src="images/product-details/rating.png" alt="" />
							<div class="rating">
								<span data-value="1">★</span>
								<span data-value="2">★</span>
								<span data-value="3">★</span>
								<span data-value="4">★</span>
								<span data-value="5">★</span>
							</div>
							
							<button type="submit" class="btn btn-default pull-right">
								Gửi đánh giá
							</button>
						</form>
					</div>

				</div>

			</div>
		</div><!--/category-tab-->

		<div class="recommended_items">
			<!--recommended_items-->
			<h2 class="title text-center">Gợi ý sản phẩm</h2>

			<div id="recommended-item-carousel" class="carousel slide" data-ride="carousel">
				<div class="carousel-inner">

					<div class="item active">
						 @foreach (var relatedProduct in @ViewBag.RelatedProducts as IEnumerable<ProductModel>)
						 {
						<div class="col-sm-4">
								<div class="product-image-wrapper">
									<div class="single-products">


										<div class="productinfo text-center">
											<a asp-action="Detail" asp-controller="Product" asp-route-Id="@relatedProduct.Id">
												<img src="~/img/@relatedProduct.Img" alt="@relatedProduct.Name" width="100px" height="200px" />
												<h2>@relatedProduct.Price.ToString("#,##0 VNĐ")</h2>
												<p>@relatedProduct.Name</p>
												<p>Danh mục: @relatedProduct.Category.Name</p>
												<p>Thương hiệu: @relatedProduct.Brand.Name</p>
											</a>
										</div>
									</div>
								</div>
						</div>
							}
						
					</div>
					
				</div>
				<a class="left recommended-item-control" href="#recommended-item-carousel" data-slide="prev">
					<i class="fa fa-angle-left"></i>
				</a>
				<a class="right recommended-item-control" href="#recommended-item-carousel" data-slide="next">
					<i class="fa fa-angle-right"></i>
				</a>
			</div>
		</div><!--/recommended_items-->
	</div>
</div>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		const stars = document.querySelectorAll(".rating span");
		const hiddenInput = document.getElementById("Star");

		stars.forEach(star => {
			star.addEventListener("mouseover", () => {
				const val = parseInt(star.getAttribute("data-value"));
				highlightStars(val);
			});

			star.addEventListener("mouseout", () => {
				const currentVal = parseInt(hiddenInput.value);
				highlightStars(currentVal);
			});

			star.addEventListener("click", () => {
				const val = parseInt(star.getAttribute("data-value"));
				hiddenInput.value = val;
				highlightStars(val);
			});
		});

		function highlightStars(value) {
			stars.forEach(star => {
				const starVal = parseInt(star.getAttribute("data-value"));
				star.classList.toggle("selected", starVal <= value);
			});
		}

		// Khởi tạo mặc định: nếu cần, có thể để mặc định là 5 sao
		highlightStars(parseInt(hiddenInput.value));
	</script>
	<script>
		function magnify(imgID, zoom) {
		  const img = document.getElementById(imgID);
		  const glass = document.createElement("DIV");
		  glass.setAttribute("class", "img-magnifier-glass");
		  img.parentElement.insertBefore(glass, img);

		  glass.style.backgroundImage = `url('${img.src}')`;
		  glass.style.backgroundRepeat = "no-repeat";
		  glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";

		  const bw = 3;
		  const w = glass.offsetWidth / 2;
		  const h = glass.offsetHeight / 2;

		  function moveMagnifier(e) {
			e.preventDefault();
			glass.style.display = "block";
			const pos = getCursorPos(e);
			let x = pos.x;
			let y = pos.y;

			if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
			if (x < w / zoom) { x = w / zoom; }
			if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
			if (y < h / zoom) { y = h / zoom; }

			glass.style.left = (x - w) + "px";
			glass.style.top = (y - h) + "px";
			glass.style.backgroundPosition = `-${(x * zoom) - w + bw}px -${(y * zoom) - h + bw}px`;
		  }

		  function hideMagnifier() {
			glass.style.display = "none";
		  }

		  function getCursorPos(e) {
			const a = img.getBoundingClientRect();
			let x = e.pageX - a.left - window.pageXOffset;
			let y = e.pageY - a.top - window.pageYOffset;
			return { x: x, y: y };
		  }

		  img.addEventListener("mousemove", moveMagnifier);
		  glass.addEventListener("mousemove", moveMagnifier);
		  img.addEventListener("mouseleave", hideMagnifier);
		  glass.addEventListener("mouseleave", hideMagnifier);
		}

		// Khởi tạo kính lúp cho ảnh chính với zoom 3x
		magnify("productImage", 1.5);
	</script>
}
<style>
	.rating {
		display: flex;
		flex-direction: row;
		gap: 5px;
		cursor: pointer;
	}

		.rating span {
			font-size: 30px;
			color: gray;
		}

			.rating span.selected {
				color: gold;
			}

			.rating span:hover {
				cursor: pointer;
			}

	.view-product {
		position: relative;
	}

	.img-magnifier-glass {
		position: absolute;
		border: 1px solid #000;
		border-radius: 50%;
		cursor: none;
		width: 80px;
		height: 80px;
		box-shadow: 0 0 8px rgba(0,0,0,0.6);
		display: none; /* ẩn ban đầu */
		overflow: hidden;
		z-index: 1000;
	}
</style>
